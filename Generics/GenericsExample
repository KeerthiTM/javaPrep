public class GenericsExample {
    public static void main(String[] args) {
        // Example 1: Generic Class
        Box<Integer> integerBox = new Box<>(10);
        int value = integerBox.getItem();
        System.out.println("Value: " + value);

        // Example 2: Generic Method
        String[] stringArray = {"Alice", "Bob", "Charlie"};
        int stringCount = countElements(stringArray);
        System.out.println("String count: " + stringCount);

        // Example 3: Bounded Type Parameters
        double maxDouble = maximum(5.8, 3.7, 9.2);
        System.out.println("Max double: " + maxDouble);
    }

    // Example 1: Generic Class
    static class Box<T> {
        private T item;

        public Box(T item) {
            this.item = item;
        }

        public T getItem() {
            return item;
        }
    }

    // Example 2: Generic Method
    public static <E> int countElements(E[] array) {
        return array.length;
    }

    // Example 3: Bounded Type Parameters
    public static <T extends Comparable<T>> T maximum(T a, T b, T c) {
        T max = a;
        if (b.compareTo(max) > 0) {
            max = b;
        }
        if (c.compareTo(max) > 0) {
            max = c;
        }
        return max;
    }
}
